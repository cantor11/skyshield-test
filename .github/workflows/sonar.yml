name: SonarCloud Analysis

on:
  push:
    branches:
      - main # Ejecuta el análisis en cada push a la rama 'main'.
  pull_request:
    branches:
      - main # Ejecuta el análisis en los pull requests hacia 'main'.

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el código fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Asegura que se use la versión adecuada de Node.js.

      # 3. Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm install

      # 4. Generar reporte de cobertura con Jest
      - name: Run Jest with coverage
        run: npx jest --coverage # Genera el archivo coverage/lcov.info.

      # 5. Instalar sonar-scanner (si no usas la acción oficial de SonarCloud)
      - name: Install SonarScanner
        run: |
          sudo apt-get install -y unzip
          curl -L https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.6.2.2472/sonar-scanner-4.6.2.2472-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/bin/sonar-scanner

      # 6. Ejecutar Sonar Scanner
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cantor11_skyshield-test
            -Dsonar.organization=cantor11
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=./src
            -Dsonar.language=js
            -Dsonar.exclusions=node_modules/**
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
